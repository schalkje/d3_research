:root, [data-theme="flat"] {
  --fd-bg: #f6f7fb;
  --fd-surface: #ffffff;
  --fd-text: #0f172a;
  --fd-muted: #475569;
  --fd-accent: #2563eb;
  --fd-border: #e5e7eb;
  --fd-edge: #3b82f6;
}

body { background: var(--fd-bg); color: var(--fd-text); font-family: Inter, 'Segoe UI', Roboto, Arial, sans-serif; }

/* minimal, crisp canvases */
#graph { background-color: var(--fd-surface) !important; border: 1px solid var(--fd-border) !important; border-radius: 8px; }
.minimap-svg { background-color: #ffffff !important; border: 1px solid var(--fd-border) !important; border-radius: 6px; }
svg.canvas { border: 1px solid var(--fd-border) !important; box-shadow: none !important; border-radius: 8px; }

.shape { fill: var(--fd-surface) !important; stroke: var(--fd-accent) !important; stroke-width: 2px; }
.rect.shape, .adapter.shape, .SSIS.shape, .container-shape, .circle.shape { fill: var(--fd-surface) !important; stroke: var(--fd-border) !important; stroke-width: 1.5px; rx: 6 !important; ry: 6 !important; }
/* Base header styling */
.header-background { fill: var(--fd-surface) !important; stroke: var(--fd-border) !important; }
.header-text { fill: var(--fd-text) !important; font-weight: 700; letter-spacing: 0.2px; }

/* Collapsed container headers — flat themed with subtle status colors */
.collapsed .zone-header .header-background {
  stroke-width: 1px !important;
}

.collapsed[status="Unknown"] .zone-header .header-background {
  fill: #e2e8f0 !important;
  stroke: #cbd5e1 !important;
}

.collapsed[status="Ready"] .zone-header .header-background {
  fill: #dbeafe !important;
  stroke: #60a5fa !important;
}

.collapsed[status="Updating"] .zone-header .header-background {
  fill: #fef3c7 !important;
  stroke: #f59e0b !important;
}

.collapsed[status="Updated"] .zone-header .header-background {
  fill: #dcfce7 !important;
  stroke: #34d399 !important;
}

.collapsed[status="Skipped"] .zone-header .header-background {
  fill: #f1f5f9 !important;
  stroke: #94a3b8 !important;
}

.collapsed[status="Delayed"] .zone-header .header-background {
  fill: #ffedd5 !important;
  stroke: #fb923c !important;
}

.collapsed[status="Warning"] .zone-header .header-background {
  fill: #fef9c3 !important;
  stroke: #facc15 !important;
}

.collapsed[status="Error"] .zone-header .header-background {
  fill: #fee2e2 !important;
  stroke: #ef4444 !important;
}

.collapsed[status="Disabled"] .zone-header .header-background {
  fill: #f9fafb !important;
  stroke: #9ca3af !important;
}

/* Enhanced flat header text styling */
.collapsed .zone-header .header-text {
  font-weight: 800 !important;
  letter-spacing: 0.5px !important;
  text-shadow: 0 1px 2px rgba(0,0,0,0.1) !important;
}

/* Status-specific header text colors for collapsed containers */
.collapsed[status="Unknown"] .zone-header .header-text {
  fill: #475569 !important;
}

.collapsed[status="Ready"] .zone-header .header-text {
  fill: #2563eb !important;
  text-shadow: 0 1px 2px rgba(37,99,235,0.2) !important;
}

.collapsed[status="Updating"] .zone-header .header-text {
  fill: #f59e0b !important;
  text-shadow: 0 1px 2px rgba(245,158,11,0.2) !important;
}

.collapsed[status="Updated"] .zone-header .header-text {
  fill: #34d399 !important;
  text-shadow: 0 1px 2px rgba(52,211,153,0.2) !important;
}

.collapsed[status="Skipped"] .zone-header .header-text {
  fill: #94a3b8 !important;
  text-shadow: 0 1px 2px rgba(148,163,184,0.2) !important;
}

.collapsed[status="Delayed"] .zone-header .header-text {
  fill: #fb923c !important;
  text-shadow: 0 1px 2px rgba(251,146,60,0.2) !important;
}

.collapsed[status="Warning"] .zone-header .header-text {
  fill: #facc15 !important;
  text-shadow: 0 1px 2px rgba(250,204,21,0.2) !important;
}

.collapsed[status="Error"] .zone-header .header-text {
  fill: #ef4444 !important;
  text-shadow: 0 1px 2px rgba(239,68,68,0.2) !important;
}

.collapsed[status="Disabled"] .zone-header .header-text {
  fill: #9ca3af !important;
  text-shadow: 0 1px 2px rgba(0,0,0,0.05) !important;
}

text, .label, .rect.label { fill: var(--fd-text) !important; font-weight: 700; }
.edge .path { stroke: var(--fd-edge) !important; stroke-width: 2.5px; }

.zoom-button:hover circle { fill: #eef2ff !important; stroke: #c7d2fe !important; }
.zoom-icon { fill: var(--fd-text) !important; }

/* Minimap overlays */
.minimap-svg .eye { fill: var(--fd-bg) !important; fill-opacity: 0.15; filter: blur(8px); -webkit-filter: blur(8px); }
.minimap-svg .iris { fill: none !important; stroke: var(--fd-accent) !important; stroke-width: 6px !important; }

/* Strong, flat status palette */
.shape[status="Unknown"], .node.shape[status="Unknown"], .container-shape[status="Unknown"], .rect.shape[status="Unknown"] {
  fill: #e2e8f0 !important;
  stroke: #cbd5e1 !important;
  stroke-width: 1.5px !important;
}
.shape[status="Ready"], .node.shape[status="Ready"], .container-shape[status="Ready"], .rect.shape[status="Ready"] {
  fill: #dbeafe !important;
  stroke: #60a5fa !important;
  stroke-width: 2px !important;
}
.shape[status="Updating"], .node.shape[status="Updating"], .container-shape[status="Updating"], .rect.shape[status="Updating"] {
  fill: #fef3c7 !important;
  stroke: #f59e0b !important;
  stroke-width: 2.5px !important;
  stroke-dasharray: 10 6;
  animation: flat-dash 1s linear infinite;
}
.shape[status="Updated"], .node.shape[status="Updated"], .container-shape[status="Updated"], .rect.shape[status="Updated"] {
  fill: #dcfce7 !important;
  stroke: #34d399 !important;
  stroke-width: 2px !important;
}
.shape[status="Skipped"], .node.shape[status="Skipped"], .container-shape[status="Skipped"], .rect.shape[status="Skipped"] {
  fill: #f1f5f9 !important;
  stroke: #94a3b8 !important;
  stroke-width: 2px !important;
}
.shape[status="Delayed"], .node.shape[status="Delayed"], .container-shape[status="Delayed"], .rect.shape[status="Delayed"] {
  fill: #ffedd5 !important;
  stroke: #fb923c !important;
  stroke-width: 2px !important;
}
.shape[status="Warning"], .node.shape[status="Warning"], .container-shape[status="Warning"], .rect.shape[status="Warning"] {
  fill: #fef9c3 !important;
  stroke: #facc15 !important;
  stroke-width: 2.25px !important;
}
.shape[status="Error"], .node.shape[status="Error"], .container-shape[status="Error"], .rect.shape[status="Error"] {
  fill: #fee2e2 !important;
  stroke: #ef4444 !important;
  stroke-width: 2.75px !important;
}
.shape[status="Disabled"], .node.shape[status="Disabled"], .container-shape[status="Disabled"], .rect.shape[status="Disabled"] {
  fill: #f9fafb !important;
  stroke: #9ca3af !important;
  stroke-width: 1.5px !important;
}

@keyframes flat-dash { to { stroke-dashoffset: -64; } }


/* Container node state theming
   - Expanded (default): toned down vs base nodes, no animations
   - Collapsed: clear, full-opacity states, no animations
   Note: container status is on the parent <g>, not the rect */

/* Collapsed containers — styled like rect nodes (parent carries status) */
.collapsed .container-shape { opacity: 1 !important; filter: none !important; }
.collapsed[status="Unknown"] .container-shape {
  fill: #e2e8f0 !important;
  stroke: #cbd5e1 !important;
  stroke-width: 1.5px !important;
}
.collapsed[status="Ready"] .container-shape {
  fill: #dbeafe !important;
  stroke: #60a5fa !important;
  stroke-width: 2px !important;
}
.collapsed[status="Updating"] .container-shape {
  fill: #fef3c7 !important;
  stroke: #f59e0b !important;
  stroke-width: 2.5px !important;
  /* Removed dotted lines - now solid like requested */
}
.collapsed[status="Updated"] .container-shape {
  fill: #dcfce7 !important;
  stroke: #34d399 !important;
  stroke-width: 2px !important;
}
.collapsed[status="Skipped"] .container-shape {
  fill: #f1f5f9 !important;
  stroke: #94a3b8 !important;
  stroke-width: 2px !important;
}
.collapsed[status="Delayed"] .container-shape {
  fill: #ffedd5 !important;
  stroke: #fb923c !important;
  stroke-width: 2px !important;
}
.collapsed[status="Warning"] .container-shape {
  fill: #fef9c3 !important;
  stroke: #facc15 !important;
  stroke-width: 2.25px !important;
}
.collapsed[status="Error"] .container-shape {
  fill: #fee2e2 !important;
  stroke: #ef4444 !important;
  stroke-width: 2.75px !important;
}
.collapsed[status="Disabled"] .container-shape {
  fill: #f9fafb !important;
  stroke: #9ca3af !important;
  stroke-width: 1.5px !important;
}

/* Expanded containers — toned down (parent carries status) */
/* Expanded subdued state — adapters, marts, foundations only */
.adapter.expanded[status="Unknown"] > .zone-container > .container-shape,
.Adapter.expanded[status="Unknown"] > .zone-container > .container-shape,
.mart.expanded[status="Unknown"] > .zone-container > .container-shape,
.Mart.expanded[status="Unknown"] > .zone-container > .container-shape,
.foundation.expanded[status="Unknown"] > .zone-container > .container-shape,
.Foundation.expanded[status="Unknown"] > .zone-container > .container-shape {
  fill: #e2e8f0 !important;
  fill-opacity: 0.2 !important;
  stroke: #cbd5e1 !important;
  stroke-width: 1px !important;
}

.adapter.expanded[status="Ready"] > .zone-container > .container-shape,
.Adapter.expanded[status="Ready"] > .zone-container > .container-shape,
.mart.expanded[status="Ready"] > .zone-container > .container-shape,
.Mart.expanded[status="Ready"] > .zone-container > .container-shape,
.foundation.expanded[status="Ready"] > .zone-container > .container-shape,
.Foundation.expanded[status="Ready"] > .zone-container > .container-shape {
  fill: #dbeafe !important;
  fill-opacity: 0.25 !important;
  stroke: #cbd5e1 !important;
  stroke-width: 1px !important;
}

.adapter.expanded[status="Updating"] > .zone-container > .container-shape,
.Adapter.expanded[status="Updating"] > .zone-container > .container-shape,
.mart.expanded[status="Updating"] > .zone-container > .container-shape,
.Mart.expanded[status="Updating"] > .zone-container > .container-shape,
.foundation.expanded[status="Updating"] > .zone-container > .container-shape,
.Foundation.expanded[status="Updating"] > .zone-container > .container-shape {
  fill: #fef3c7 !important;
  fill-opacity: 0.25 !important;
  stroke: #cbd5e1 !important;
  stroke-width: 1px !important;
  animation: none !important;
  stroke-dasharray: none !important;
}

.adapter.expanded[status="Updated"] > .zone-container > .container-shape,
.Adapter.expanded[status="Updated"] > .zone-container > .container-shape,
.mart.expanded[status="Updated"] > .zone-container > .container-shape,
.Mart.expanded[status="Updated"] > .zone-container > .container-shape,
.foundation.expanded[status="Updated"] > .zone-container > .container-shape,
.Foundation.expanded[status="Updated"] > .zone-container > .container-shape {
  fill: #dcfce7 !important;
  fill-opacity: 0.18 !important;
  stroke: #cbd5e1 !important;
  stroke-width: 1px !important;
}

.adapter.expanded[status="Skipped"] > .zone-container > .container-shape,
.Adapter.expanded[status="Skipped"] > .zone-container > .container-shape,
.mart.expanded[status="Skipped"] > .zone-container > .container-shape,
.Mart.expanded[status="Skipped"] > .zone-container > .container-shape,
.foundation.expanded[status="Skipped"] > .zone-container > .container-shape,
.Foundation.expanded[status="Skipped"] > .zone-container > .container-shape {
  fill: #f1f5f9 !important;
  fill-opacity: 0.9 !important;
  stroke: #cbd5e1 !important;
  stroke-width: 1px !important;
}

.adapter.expanded[status="Delayed"] > .zone-container > .container-shape,
.Adapter.expanded[status="Delayed"] > .zone-container > .container-shape,
.mart.expanded[status="Delayed"] > .zone-container > .container-shape,
.Mart.expanded[status="Delayed"] > .zone-container > .container-shape,
.foundation.expanded[status="Delayed"] > .zone-container > .container-shape,
.Foundation.expanded[status="Delayed"] > .zone-container > .container-shape {
  fill: #ffedd5 !important;
  fill-opacity: 0.28 !important;
  stroke: #cbd5e1 !important;
  stroke-width: 1px !important;
}

.adapter.expanded[status="Warning"] > .zone-container > .container-shape,
.Adapter.expanded[status="Warning"] > .zone-container > .container-shape,
.mart.expanded[status="Warning"] > .zone-container > .container-shape,
.Mart.expanded[status="Warning"] > .zone-container > .container-shape,
.foundation.expanded[status="Warning"] > .zone-container > .container-shape,
.Foundation.expanded[status="Warning"] > .zone-container > .container-shape {
  fill: #fef9c3 !important;
  fill-opacity: 0.28 !important;
  stroke: #cbd5e1 !important;
  stroke-width: 1px !important;
}

.adapter.expanded[status="Error"] > .zone-container > .container-shape,
.Adapter.expanded[status="Error"] > .zone-container > .container-shape,
.mart.expanded[status="Error"] > .zone-container > .container-shape,
.Mart.expanded[status="Error"] > .zone-container > .container-shape,
.foundation.expanded[status="Error"] > .zone-container > .container-shape,
.Foundation.expanded[status="Error"] > .zone-container > .container-shape {
  fill: #fee2e2 !important;
  fill-opacity: 0.28 !important;
  stroke: #cbd5e1 !important;
  stroke-width: 1px !important;
}

.adapter.expanded[status="Disabled"] > .zone-container > .container-shape,
.Adapter.expanded[status="Disabled"] > .zone-container > .container-shape,
.mart.expanded[status="Disabled"] > .zone-container > .container-shape,
.Mart.expanded[status="Disabled"] > .zone-container > .container-shape,
.foundation.expanded[status="Disabled"] > .zone-container > .container-shape,
.Foundation.expanded[status="Disabled"] > .zone-container > .container-shape {
  fill: #f9fafb !important;
  fill-opacity: 0.2 !important;
  stroke: #cbd5e1 !important;
  stroke-width: 1px !important;
}

/* Expanded lanes/columns: ignore state (no fill/animation) */
.lane.expanded > .zone-container > .container-shape,
.Lane.expanded > .zone-container > .container-shape,
.columns.expanded > .zone-container > .container-shape,
.Columns.expanded > .zone-container > .container-shape {
  fill: none !important;
  fill-opacity: 0 !important;
  animation: none !important;
  stroke-dasharray: none !important;
  stroke: var(--fd-border) !important;
}

/*
  Nested container depth styling for Flat theme
  Subtle opacity gradation for visual hierarchy
*/
[data-theme="flat"] :is(.lane, .columns, .group, .adapter, .mart, .foundation) :is(.lane, .columns, .group, .adapter, .mart, .foundation) > .zone-container > .container-shape {
  fill-opacity: 0.95 !important;
  stroke-opacity: 0.9 !important;
}
[data-theme="flat"] :is(.lane, .columns, .group, .adapter, .mart, .foundation) :is(.lane, .columns, .group, .adapter, .mart, .foundation) > .zone-header > .header-background {
  fill-opacity: 0.95 !important;
  stroke-opacity: 0.9 !important;
}

[data-theme="flat"] :is(.lane, .columns, .group, .adapter, .mart, .foundation) :is(.lane, .columns, .group, .adapter, .mart, .foundation) :is(.lane, .columns, .group, .adapter, .mart, .foundation) > .zone-container > .container-shape {
  fill-opacity: 0.9 !important;
  stroke-opacity: 0.8 !important;
}
[data-theme="flat"] :is(.lane, .columns, .group, .adapter, .mart, .foundation) :is(.lane, .columns, .group, .adapter, .mart, .foundation) :is(.lane, .columns, .group, .adapter, .mart, .foundation) > .zone-header > .header-background {
  fill-opacity: 0.9 !important;
  stroke-opacity: 0.8 !important;
}

[data-theme="flat"] :is(.lane, .columns, .group, .adapter, .mart, .foundation) :is(.lane, .columns, .group, .adapter, .mart, .foundation) :is(.lane, .columns, .group, .adapter, .mart, .foundation) :is(.lane, .columns, .group, .adapter, .mart, .foundation) > .zone-container > .container-shape {
  fill-opacity: 0.85 !important;
  stroke-opacity: 0.7 !important;
}
[data-theme="flat"] :is(.lane, .columns, .group, .adapter, .mart, .foundation) :is(.lane, .columns, .group, .adapter, .mart, .foundation) :is(.lane, .columns, .group, .adapter, .mart, .foundation) :is(.lane, .columns, .group, .adapter, .mart, .foundation) > .zone-header > .header-background {
  fill-opacity: 0.85 !important;
  stroke-opacity: 0.7 !important;
}

[data-theme="flat"] :is(.lane, .columns, .group, .adapter, .mart, .foundation) :is(.lane, .columns, .group, .adapter, .mart, .foundation) :is(.lane, .columns, .group, .adapter, .mart, .foundation) :is(.lane, .columns, .group, .adapter, .mart, .foundation) :is(.lane, .columns, .group, .adapter, .mart, .foundation) > .zone-container > .container-shape {
  fill-opacity: 0.8 !important;
  stroke-opacity: 0.6 !important;
}
[data-theme="flat"] :is(.lane, .columns, .group, .adapter, .mart, .foundation) :is(.lane, .columns, .group, .adapter, .mart, .foundation) :is(.lane, .columns, .group, .adapter, .mart, .foundation) :is(.lane, .columns, .group, .adapter, .mart, .foundation) :is(.lane, .columns, .group, .adapter, .mart, .foundation) > .zone-header > .header-background {
  fill-opacity: 0.8 !important;
  stroke-opacity: 0.6 !important;
}
