:root, [data-theme="flat"] {
  --fd-bg: #f6f7fb;
  --fd-surface: #ffffff;
  --fd-text: #0f172a;
  --fd-muted: #475569;
  --fd-accent: #2563eb;
  --fd-border: #e5e7eb;
  --fd-edge: #3b82f6;
}

body { background: var(--fd-bg); color: var(--fd-text); font-family: Inter, 'Segoe UI', Roboto, Arial, sans-serif; }

/* minimal, crisp canvases */
#graph { background-color: var(--fd-surface) !important; border: 1px solid var(--fd-border) !important; border-radius: 8px; }
.minimap-svg { background-color: #ffffff !important; border: 1px solid var(--fd-border) !important; border-radius: 6px; }
svg.canvas { border: 1px solid var(--fd-border) !important; box-shadow: none !important; border-radius: 8px; }

.shape { fill: var(--fd-surface) !important; stroke: var(--fd-accent) !important; stroke-width: 2px; }
.rect.shape, .adapter.shape, .SSIS.shape, .container-shape, .circle.shape { fill: var(--fd-surface) !important; stroke: var(--fd-border) !important; stroke-width: 1.5px; rx: 6 !important; ry: 6 !important; }
.header-background { fill: var(--fd-surface) !important; stroke: var(--fd-border) !important; }
.header-text { fill: var(--fd-text) !important; font-weight: 700; letter-spacing: 0.2px; }

text, .label, .rect.label { fill: var(--fd-text) !important; font-weight: 700; }
.edge .path { stroke: var(--fd-edge) !important; stroke-width: 2.5px; }

.zoom-button:hover circle { fill: #eef2ff !important; stroke: #c7d2fe !important; }
.zoom-icon { fill: var(--fd-text) !important; }

/* Minimap overlays */
.minimap-svg .eye { fill: var(--fd-bg) !important; fill-opacity: 0.15; filter: blur(8px); -webkit-filter: blur(8px); }
.minimap-svg .iris { fill: none !important; stroke: var(--fd-accent) !important; stroke-width: 6px !important; }

/* Strong, flat status palette */
.shape[status="Unknown"], .node.shape[status="Unknown"], .container-shape[status="Unknown"], .rect.shape[status="Unknown"] { fill: #e2e8f0 !important; stroke: #cbd5e1 !important; }
.shape[status="Ready"], .node.shape[status="Ready"], .container-shape[status="Ready"], .rect.shape[status="Ready"] { fill: #dbeafe !important; stroke: #60a5fa !important; }
.shape[status="Updating"], .node.shape[status="Updating"], .container-shape[status="Updating"], .rect.shape[status="Updating"] { fill: #fef3c7 !important; stroke: #f59e0b !important; stroke-dasharray: 10 6; animation: flat-dash 1s linear infinite; }
.shape[status="Updated"], .node.shape[status="Updated"], .container-shape[status="Updated"], .rect.shape[status="Updated"] { fill: #dcfce7 !important; stroke: #34d399 !important; }
.shape[status="Skipped"], .node.shape[status="Skipped"], .container-shape[status="Skipped"], .rect.shape[status="Skipped"] { fill: #f1f5f9 !important; stroke: #94a3b8 !important; }
.shape[status="Delayed"], .node.shape[status="Delayed"], .container-shape[status="Delayed"], .rect.shape[status="Delayed"] { fill: #ffedd5 !important; stroke: #fb923c !important; }
.shape[status="Warning"], .node.shape[status="Warning"], .container-shape[status="Warning"], .rect.shape[status="Warning"] { fill: #fef9c3 !important; stroke: #facc15 !important; }
.shape[status="Error"], .node.shape[status="Error"], .container-shape[status="Error"], .rect.shape[status="Error"] { fill: #fee2e2 !important; stroke: #ef4444 !important; }

@keyframes flat-dash { to { stroke-dashoffset: -64; } }


/* Collapsed containers: reflect state fully (like rect nodes) */
.collapsed .container-shape { /* base state palette above is already full */ }

/* Expanded adapters/marts/foundations: subdued, no animations */
.adapter.expanded[status="Updating"] > .zone-container > .container-shape,
.Adapter.expanded[status="Updating"] > .zone-container > .container-shape,
.mart.expanded[status="Updating"] > .zone-container > .container-shape,
.Mart.expanded[status="Updating"] > .zone-container > .container-shape,
.foundation.expanded[status="Updating"] > .zone-container > .container-shape,
.Foundation.expanded[status="Updating"] > .zone-container > .container-shape { animation: none !important; stroke-dasharray: none !important; }
.adapter.expanded[status="Ready"] > .zone-container > .container-shape,
.Adapter.expanded[status="Ready"] > .zone-container > .container-shape,
.mart.expanded[status="Ready"] > .zone-container > .container-shape,
.Mart.expanded[status="Ready"] > .zone-container > .container-shape,
.foundation.expanded[status="Ready"] > .zone-container > .container-shape,
.Foundation.expanded[status="Ready"] > .zone-container > .container-shape,
.adapter.expanded[status="Updated"] > .zone-container > .container-shape,
.Adapter.expanded[status="Updated"] > .zone-container > .container-shape,
.mart.expanded[status="Updated"] > .zone-container > .container-shape,
.Mart.expanded[status="Updated"] > .zone-container > .container-shape,
.foundation.expanded[status="Updated"] > .zone-container > .container-shape,
.Foundation.expanded[status="Updated"] > .zone-container > .container-shape,
.adapter.expanded[status="Warning"] > .zone-container > .container-shape,
.Adapter.expanded[status="Warning"] > .zone-container > .container-shape,
.mart.expanded[status="Warning"] > .zone-container > .container-shape,
.Mart.expanded[status="Warning"] > .zone-container > .container-shape,
.foundation.expanded[status="Warning"] > .zone-container > .container-shape,
.Foundation.expanded[status="Warning"] > .zone-container > .container-shape,
.adapter.expanded[status="Error"] > .zone-container > .container-shape,
.Adapter.expanded[status="Error"] > .zone-container > .container-shape,
.mart.expanded[status="Error"] > .zone-container > .container-shape,
.Mart.expanded[status="Error"] > .zone-container > .container-shape,
.foundation.expanded[status="Error"] > .zone-container > .container-shape,
.Foundation.expanded[status="Error"] > .zone-container > .container-shape,
.adapter.expanded[status="Delayed"] > .zone-container > .container-shape,
.Adapter.expanded[status="Delayed"] > .zone-container > .container-shape,
.mart.expanded[status="Delayed"] > .zone-container > .container-shape,
.Mart.expanded[status="Delayed"] > .zone-container > .container-shape,
.foundation.expanded[status="Delayed"] > .zone-container > .container-shape,
.Foundation.expanded[status="Delayed"] > .zone-container > .container-shape,
.adapter.expanded[status="Skipped"] > .zone-container > .container-shape,
.Adapter.expanded[status="Skipped"] > .zone-container > .container-shape,
.mart.expanded[status="Skipped"] > .zone-container > .container-shape,
.Mart.expanded[status="Skipped"] > .zone-container > .container-shape,
.foundation.expanded[status="Skipped"] > .zone-container > .container-shape,
.Foundation.expanded[status="Skipped"] > .zone-container > .container-shape,
.adapter.expanded[status="Unknown"] > .zone-container > .container-shape,
.Adapter.expanded[status="Unknown"] > .zone-container > .container-shape,
.mart.expanded[status="Unknown"] > .zone-container > .container-shape,
.Mart.expanded[status="Unknown"] > .zone-container > .container-shape,
.foundation.expanded[status="Unknown"] > .zone-container > .container-shape,
.Foundation.expanded[status="Unknown"] > .zone-container > .container-shape {
  /* slightly tone down fills compared to base nodes; ensure override */
  opacity: 0.95 !important;
}

/* Expanded lanes/columns: no state styling beyond theme default */
.lane.expanded > .zone-container > .container-shape,
.Lane.expanded > .zone-container > .container-shape,
.columns.expanded > .zone-container > .container-shape,
.Columns.expanded > .zone-container > .container-shape {
  fill: none !important;
  fill-opacity: 0 !important;
  animation: none !important;
  stroke-dasharray: none !important;
  stroke: var(--fd-border) !important;
}
