#graph.fullscreen {
  position: fixed; /* Position the element relative to the viewport */
  top: 0; /* Align the top edge to the top of the viewport */
  left: 0; /* Align the left edge to the left of the viewport */
  width: 100vw; /* Set the width to 100% of the viewport width */
  height: 100vh; /* Set the height to 100% of the viewport height */
  z-index: 9999; /* Ensure the element is on top of other elements */
  background: white; /* Optional: Set a background color */
}
#graph {
  border: 1px solid black;
  width: 100%;
  height: 800px;
  background-color: white;
   /* rgba(200, 200, 200, 0.2); */
}

#graph-container {
  position: relative;
}

  #graph-container .fullscreen-toggle {
      position: absolute;
      top: 10px;
      right: 10px;
      width: 10px;
      height: 10px;
      background: red;
      border: green;
      cursor: pointer;
      font-size: 24px;
      color: #000;
      z-index: 10000; /* Ensure the button is above the SVG */
  }

#graph rect.boundingBox {
  fill: none;
  stroke: rgba(0, 160, 0, 0.5);
}

#minimap-container {
  border: 1px solid black;
}

#minimap {
  border: 1px solid darkblue;
  width: 1600px;
  height: 600px;
  /* background-color: rgba(200, 200, 200, 0.2); */
  background-color:rgba(255,255,255, 0.7);
}

#minimap rect.background {
  fill: rgb(190, 190, 190);
  stroke: rgb(136, 136, 136);
}

#minimap rect.boundingbox {
  fill: none;
  stroke: rgba(255, 0, 0, 0.5);
  stroke-width: 4px;
}


#minimap .eye {
  /* fill: rgba(238, 237, 221, 0.6) */
  fill: rgba(255, 255, 255, 0.7)
}

#minimap .iris {
  fill: none;
  stroke: rgba(255, 0, 0, 0.2);
  stroke-width: 8px;
}

/* Minimap Element Styles */
.minimap-eyeball {
  fill: white;
}

.minimap-pupil {
  fill: black;
}


body {
  background-color: white;
  font-family: Arial;
}

svg.container {
  border: 1px solid #000;
  background-color: red;
}

svg.canvas {
  /* background-color: #e6e3e3; */
  /* background-color: white; */
  border-color: #d3d3d3;
  border-width: 2px;
  border-style: solid;
  box-shadow: 4px 3px 8px 1px #969696;
  -webkit-box-shadow: 4px 3px 8px 1px #969696;
}


/*
------------------------------------------------------------------------------------------------------------------------------------------------
*/

.collapsed .shape{
  opacity: 1;
  /* fill-opacity: 0.7 !important; */
}
.collapsed .label{
  /* fill: white; */
  font-weight: bold  !important;
  opacity: 1;
  fill-opacity: 1 !important;
}

.shape {
  fill: rgb(65, 65, 151);
  fill-opacity: 1;
  stroke: rgb(65, 65, 151);
  stroke-width: 2;
  cursor: default;
  stroke-opacity: 0.3;
}

.shape[status="Unknown"] {
  fill: #ddc7ff;
  fill-opacity: 0.1;
}

.shape[status="Ready"] {
  fill: lightblue;
  fill-opacity: 0.3;  
}

.shape[status="Updating"] {
  stroke: green;
  fill: lightgreen;
  fill-opacity: 0.3;
}

.shape[status="Updated"] {
  stroke: none;
  fill: rgb(24, 196, 24);
  fill-opacity: 0.1;
}
.collapsed[status="Updated"] .shape{
  stroke: none;
  fill: rgb(24, 196, 24);
  fill-opacity: 1;
}

.shape[status="Skipped"] {
  stroke: yellowgreen;
  fill: rgb(255, 252, 208);
  fill-opacity: 1;
}


.shape[status="Delayed"] {
  stroke: orange;
}

.shape[status="Warning"] {
  stroke: orangered;
  fill: orangered;
  fill-opacity: 0.3;
}

.shape[status="Error"] {
  stroke: red;
  fill: red;
  fill-opacity: 0.3;
}

/*
    Node shape statusses
*/

.Node.shape[status="Unknown"] {
  fill: rgb(132, 139, 146);
  fill-opacity: 1;
}

.Node.shape[status="Ready"] {
  fill: lightblue;
  fill-opacity: 1;
}

@keyframes running-process {
  0% {
      background: lightgreen;
      box-shadow: 0px 0px 5px 5px lightgreen;
  }

  15% {
      background: lightgreen;
      box-shadow: none;
  }

  50% {
      background: transparent;
      box-shadow: none;
  }

  85% {
      background: lightgreen;
      box-shadow: none;
  }

  100% {
      background: lightgreen;
      box-shadow: 0px 0px 5px 5px lightgreen;
  }
}


@keyframes dash {
  to {
    stroke-dashoffset: -1000;
  }
}

.Node.shape[status="Updating"] {
  fill: lightgreen;
  fill-opacity: 1;
  stroke: green;
  stroke-opacity: 100%;
  opacity: 100%;
  stroke-dasharray: 10;
  animation: dash 10s forwards linear infinite;
}

.Node.shape[status="Updated"] {
  fill: rgb(24, 196, 24);
  fill-opacity: 1;
}

.Node.shape[status="Skipped"] {
  fill: rgb(255, 252, 208);
  fill-opacity: 1;
}


.Node.shape[status="Delayed"] {
  fill: orange;
  fill-opacity: 1;
}

.Node.shape[status="Warning"] {
  fill: orangered;
  fill-opacity: 1;
}

.Node.shape[status="Error"] {
  fill: red;
  fill-opacity: 1;
}


/*
    Labels
*/

text {
  fill: black;
}

.label {
  font-size: 12px;
  font-weight: normal;
  /* fill: rgb(216, 216, 241); */
  fill: rgb(65, 65, 151);
  fill-opacity: 0.8;
  text-anchor: start;
  dominant-baseline: hanging;
}

/* Ensure all node labels are centered */
.node.label,
.Node.label,
.rect.label,
.adapter.label,
.foundation.label,
.mart.label,
.group.label,
.lane.label,
.columns.label,
.circle.label {
  stroke: none;
  font-size: 14px;
  font-weight: bold;
  /* fill: rgb(216, 216, 241); */
  fill: black;
  fill-opacity: 0.8;
  text-anchor: middle;
  dominant-baseline: middle;
}

.placeholder {
  stroke: red;
  stroke-opacity: 1;
  stroke-width: 2;
}


/*
------------------------------------------------------------------------------------------------------------------------------------------------
*/
.centermark {
  fill: red;
  stroke: white;
  stroke-width: 1;
}

.connection-point {
  fill: rgb(155, 155, 226);
  stroke: none;
}

/* default styles */



.selected .shape {
  stroke: rgb(53, 53, 175);
  /* stroke-opacity: 0.95; */
  stroke-opacity: 1;
  stroke-width: 3;
  opacity: 0.8;
}

.node_grabbing {
  fill: #9b9bfa;
  fill-opacity: 0.95;
  stroke: rgb(65, 65, 151);
  stroke-opacity: 0.8;
  stroke-width: 4;
  cursor: grabbing;
}


.edge .path {
  stroke-width: 2px;
  stroke: #7795D1;
  /* stroke: green; */
  fill: none;
  marker-end: url(#arrow);
  /* marker-mid: url(#mid-arrow);  */
  /* marker-start: url(#arrow); */
}

.edge.selected .path {
  stroke: rgb(53, 53, 175);
  /* stroke-opacity: 0.5; */
  stroke-opacity: 1;
  opacity: 0.8;
}


.edge.ghostline {
  stroke-width: 1px;
  /* stroke: #4679BD; */
  stroke: white;
  stroke-opacity: 0.6;
}

.edge.ghostline .path {
  stroke-width: 2px;
  /* stroke: #4679BD; */
  /* stroke: white; */
  stroke: white;
  stroke-opacity: 1;
  stroke-linecap: round;
  /* 0.6; */
  marker-end: url(#debugcircle);
  marker-start: url(#debugcircle);
}





.collapsed {
  opacity: 1;
}

.expanded {

}



.zoom-button circle {
  display: none;
  transition: all 0.2s;
}

.zoom-button:hover circle {
  display: block;
  fill: #f0f0f0;
  stroke: #bbb;
  stroke-width: 1px;
  transition: all 0.2s;
  cursor: pointer;

  /* Add shadow for depth */
  filter: drop-shadow(0px 2px 4px rgba(0, 0, 0, 0.3));
}

.zoom-button rect.icon {
  fill: #acace7;
  transition: fill 0.2s, transform 0.2s;
}

.editbox {
  border: 1px grey solid;
  background: lightblue;
  margin: 0px 2px 0px 2px;
  padding: 2px 2px 0px 2px;
}

/* Zone System Styles */

/* Container Zone Styles */
.container-shape {
  fill: #f8f9fa;
  stroke: #dee2e6;
  stroke-width: 1;
  rx: 4;
  ry: 4;
}

.container-border {
  fill: none;
  stroke: transparent;
  stroke-width: 2;
  rx: 4;
  ry: 4;
}

.container-border.selected {
  stroke: #007bff;
  stroke-width: 2;
}

.container-shape.hover {
  stroke-width: 2;
}

/* Collapsed Container Styles */
.collapsed .container-shape {
  fill: #f8f9fa;
  stroke: #adb5bd;
  stroke-width: 1;
  opacity: 0.8;
}

.collapsed .container-border {
  stroke: transparent;
}

/* Header Zone Styles */
.header-background {
  fill: #ffffff;
  stroke: #dee2e6;
  stroke-width: 1;
  rx: 4;
  ry: 4;
}

/* Inner Container Zone Styles */
.zone-innerContainer {
  fill: none;
  stroke: rgba(135, 206, 250, 0.6); /* Light blue semi-transparent */
  stroke-width: 2;
  stroke-dasharray: 5,5; /* Dashed border for visual distinction */
  pointer-events: none; /* Don't interfere with interactions */
}

.header-text {
  font-family: Arial, sans-serif;
  font-size: 12px;
  font-weight: normal;
  fill: #333333;
  text-anchor: start;
}

.header-text.hover {
  fill: #007bff;
}

.status-indicator {
  fill: transparent;
}

.status-indicator.unknown {
  fill: #666666;
}

.status-indicator.ready {
  fill: #28a745;
}

.status-indicator.updating {
  fill: #ffc107;
}

.status-indicator.updated {
  fill: #17a2b8;
}

.status-indicator.error {
  fill: #dc3545;
}

.status-indicator.warning {
  fill: #fd7e14;
}

/* Zoom Button Styles */
.zoom-button {
  cursor: pointer;
}

.zoom-button-bg {
  fill: #ffffff;
  stroke: #dee2e6;
  stroke-width: 1;
}

.zoom-button-bg.hover {
  fill: #f8f9fa;
}

.zoom-icon {
  font-size: 12px;
  font-weight: bold;
  text-anchor: middle;
  fill: #333333;
}

/* Node Styles (for type="Node") */
.Node.shape {
  fill: #f8f9fa;
  stroke: #dee2e6;
  stroke-width: 1;
  rx: 5;
  ry: 5;
}

/* Circle Node Styles */
.circle.shape {
  stroke: #000;
  stroke-width: 1.5;
}

/* SSIS Node Styles */
.SSIS.shape {
  fill: #f8f9fa;
  stroke: #dee2e6;
  stroke-width: 1;
  rx: 5;
  ry: 5;
}

.SSIS.label {
  font-family: Arial, sans-serif;
  font-size: 12px;
  font-weight: normal;
  fill: #333333;
  text-anchor: middle;
  dominant-baseline: middle;
}

/* Adapter Node Styles */
.adapter.shape {
  fill: #f8f9fa;
  stroke: #dee2e6;
  stroke-width: 1;
  rx: 5;
  ry: 5;
}

.adapter.label {
  font-family: Arial, sans-serif;
  font-size: 12px;
  font-weight: normal;
  fill: #333333;
  text-anchor: middle;
  dominant-baseline: middle;
}

/* Placeholder Styles */
.placeholder {
  fill: red;
  stroke: red;
  stroke-width: 2;
}

/* Marker Styles */
.marker-arrow {
  stroke: context-stroke;
  fill: context-stroke;
  stroke-width: 2;
}

.marker-arrowhead {
  stroke: context-stroke;
  fill: none;
  stroke-width: 2;
}

.marker-circle {
  stroke: context-stroke;
  stroke-width: 2;
  fill: none;
}

.marker-diamond {
  stroke: context-stroke;
  fill: context-stroke;
}

.marker-square {
  stroke: context-stroke;
  fill: context-stroke;
}

/* Status-based styling for container shapes */
.container-shape[status="Unknown"] {
  fill: #ddc7ff;
  fill-opacity: 0.1;
}

.container-shape[status="Ready"] {
  fill: lightblue;
  fill-opacity: 0.3;
}

.container-shape[status="Updating"] {
  stroke: green;
  fill: lightgreen;
  fill-opacity: 0.3;
}

.container-shape[status="Updated"] {
  stroke: none;
  fill: rgb(24, 196, 24);
  fill-opacity: 0.1;
}

.container-shape[status="Skipped"] {
  stroke: yellowgreen;
  fill: rgb(255, 252, 208);
  fill-opacity: 1;
}

.container-shape[status="Delayed"] {
  stroke: orange;
}

.container-shape[status="Warning"] {
  stroke: orangered;
  fill: orangered;
  fill-opacity: 0.3;
}

.container-shape[status="Error"] {
  stroke: red;
  fill: red;
  fill-opacity: 0.3;
}

/* Status-based styling for Node shapes */
.Node.shape[status="Unknown"] {
  fill: #ddc7ff;
  fill-opacity: 0.1;
}

.Node.shape[status="Ready"] {
  fill: lightblue;
  fill-opacity: 0.3;
}

.Node.shape[status="Updating"] {
  stroke: green;
  fill: lightgreen;
  fill-opacity: 0.3;
}

.Node.shape[status="Updated"] {
  stroke: none;
  fill: rgb(24, 196, 24);
  fill-opacity: 0.1;
}

.Node.shape[status="Skipped"] {
  stroke: yellowgreen;
  fill: rgb(255, 252, 208);
  fill-opacity: 1;
}

.Node.shape[status="Delayed"] {
  stroke: orange;
}

.Node.shape[status="Warning"] {
  stroke: orangered;
  fill: orangered;
  fill-opacity: 0.3;
}

.Node.shape[status="Error"] {
  stroke: red;
  fill: red;
  fill-opacity: 0.3;
}